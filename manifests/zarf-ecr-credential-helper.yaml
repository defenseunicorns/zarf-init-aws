apiVersion: v1
kind: ServiceAccount
metadata:
  name: zarf-ecr-credential-helper
  namespace: zarf
  annotations:
    eks.amazonaws.com/role-arn: "###ZARF_VAR_ECR_CREDENTIAL_HELPER_ROLE_ARN###"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  namespace: zarf
  name: zarf-ecr-credential-helper
rules:
- apiGroups: [""]
  resources: ["namespaces"]
  verbs: ["list"]
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "update"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: zarf-ecr-credential-helper
  namespace: zarf
subjects:
- kind: ServiceAccount
  name: zarf-ecr-credential-helper
  namespace: zarf
roleRef:
  kind: ClusterRole
  name: zarf-ecr-credential-helper
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: zarf-ecr-credential-helper
  namespace: zarf
spec:
  schedule: "###ZARF_VAR_ECR_CREDENTIAL_HELPER_CRON_SCHEDULE###"
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: zarf-ecr-credential-helper
          imagePullSecrets:
            - name: private-registry
          containers:
            - name: zarf-ecr-credential-helper
              image: "###ZARF_REGISTRY###/###ZARF_CONST_CREDENTIAL_HELPER_IMAGE###:###ZARF_CONST_CREDENTIAL_HELPER_IMAGE_TAG###"
              imagePullPolicy: IfNotPresent
              env:
                - name: AWS_REGION
                  value: "###ZARF_VAR_AWS_REGION###"
          restartPolicy: OnFailure
